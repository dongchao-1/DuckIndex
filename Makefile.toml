[env]
LEPTONICA_INCLUDE_PATH = "${CARGO_MAKE_WORKING_DIRECTORY}\\vcpkg\\installed\\x64-windows-static\\include"
LEPTONICA_LINK_PATHS = "${CARGO_MAKE_WORKING_DIRECTORY}\\vcpkg\\installed\\x64-windows-static\\lib"
LEPTONICA_LINK_LIBS = "leptonica-1.85.0"
TESSERACT_INCLUDE_PATHS = "${CARGO_MAKE_WORKING_DIRECTORY}\\vcpkg\\installed\\x64-windows-static\\include"
TESSERACT_LINK_PATHS = "${CARGO_MAKE_WORKING_DIRECTORY}\\vcpkg\\installed\\x64-windows-static\\lib"
TESSERACT_LINK_LIBS = "tesseract55"
LIBCLANG_PATH = "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\VC\\Tools\\Llvm\\x64\\bin"

[tasks.install-vcpkg]
script = '''
git clone https://github.com/microsoft/vcpkg.git && ^
pushd vcpkg && ^
.\\bootstrap-vcpkg.bat && ^
popd
'''

[tasks.install-tesseract]
script = '''
pushd vcpkg && ^
.\\vcpkg.exe install tesseract:x64-windows-static && ^
popd
'''

[tasks.cargo-install]
script = '''cargo install cargo-nextest'''

[tasks.npm-install]
script = '''npm install'''

[tasks.build]
script = '''cargo build --manifest-path ./src-tauri/Cargo.toml'''
clear = true

[tasks.test]
script = '''cargo nextest run --manifest-path ./src-tauri/Cargo.toml'''
clear = true

[tasks.clippy]
script = '''cargo clippy --manifest-path ./src-tauri/Cargo.toml --all-targets --all-features -- -D warnings'''
clear = true

[tasks.format]
script = '''cargo fmt --manifest-path ./src-tauri/Cargo.toml'''
clear = true

[tasks.format-check]
script = '''cargo fmt --manifest-path ./src-tauri/Cargo.toml --check'''

[tasks.clean-cargo]
script = '''cargo clean --manifest-path ./src-tauri/Cargo.toml'''

[tasks.clean-vcpkg]
script = '''rmdir /s /q vcpkg
exit /b 0'''

[tasks.clean-npm]
script = '''rmdir /s /q node_modules
rmdir /s /q dist
exit /b 0
'''

[tasks.dev]
script = '''npm run tauri dev'''

[tasks.release]
script = '''npm run tauri build'''

[tasks.install]
description = "安装所有依赖"
dependencies = ["install-vcpkg",
    "install-tesseract",
    "cargo-install",
    "npm-install"
]

[tasks.check]
description = "执行test clippy format-check"
dependencies = [
    "test",
    "clippy",
    "format-check"
]
clear = true

[tasks.clean]
description = "清理所有依赖"
dependencies = ["clean-cargo",
    "clean-npm",
    "clean-vcpkg"
]
clear = true
